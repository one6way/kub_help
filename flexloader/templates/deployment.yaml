# Версия API Kubernetes для Deployment
apiVersion: apps/v1
# Тип ресурса
kind: Deployment
metadata:
  # Имя деплоймента, генерируется из шаблона
  name: {{ include "flexloader.fullname" . }}
  # Метки для идентификации ресурса
  labels:
    {{- include "flexloader.labels" . | nindent 4 }}
spec:
  # Количество реплик пода, берется из values.yaml
  replicas: {{ .Values.replicaCount }}
  # Селектор для связи деплоймента с подами
  selector:
    matchLabels:
      {{- include "flexloader.selectorLabels" . | nindent 6 }}
  # Шаблон пода
  template:
    metadata:
      # Метки пода
      labels:
        {{- include "flexloader.selectorLabels" . | nindent 8 }}
    spec:
      # Настройки безопасности для пода
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      # Описание контейнеров в поде
      containers:
        # Основной контейнер приложения
        - name: {{ .Chart.Name }}
          # Образ контейнера из values.yaml
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          # Политика загрузки образа
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Определение портов контейнера
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # Переменные окружения
          env:
            # Уровень логирования
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel }}
            # Максимальное количество подключений
            - name: MAX_CONNECTIONS
              value: {{ .Values.config.maxConnections | quote }}
            # Таймаут операций
            - name: TIMEOUT
              value: {{ .Values.config.timeout | quote }}
            # Параметры подключения к базе данных
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: DB_NAME
              value: {{ .Values.database.name }}
            - name: DB_USER
              value: {{ .Values.database.user }}
            # Пароль базы данных из секрета
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | default (include "flexloader.fullname" .) }}
                  key: {{ .Values.database.secretKey }}
            # Путь к конфигурации Spark
            - name: SPARK_CONF_DIR
              value: "/opt/spark/conf"
          # Монтирование томов в контейнер
          volumeMounts:
            # Том для данных приложения
            - name: data
              mountPath: /app/data
            # Монтирование конфигурации Spark если включено
            {{- if .Values.spark.config.enabled }}
            - name: spark-config
              mountPath: /opt/spark/conf
            {{- end }}
          # Ограничения ресурсов из values.yaml
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      # Определение томов пода
      volumes:
        # Том для данных
        - name: data
          {{- if .Values.persistence.enabled }}
          # Использование PVC если включено постоянное хранилище
          persistentVolumeClaim:
            claimName: {{ include "flexloader.fullname" . }}-pvc
          {{- else }}
          # Использование временного хранилища если PVC выключен
          emptyDir: {}
          {{- end }}
        # Том для конфигурации Spark
        {{- if .Values.spark.config.enabled }}
        - name: spark-config
          # Использование ConfigMap для конфигурации Spark
          configMap:
            name: {{ include "flexloader.fullname" . }}-spark-config
        {{- end }} 